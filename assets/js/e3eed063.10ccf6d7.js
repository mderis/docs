(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{159:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return p})),n.d(t,"default",(function(){return s}));var r=n(3),i=n(8),a=(n(0),n(173)),o={title:"API Versioning"},l={unversionedId:"features/api-versioning",id:"features/api-versioning",isDocsHomePage:!1,title:"API Versioning",description:"- How it works",source:"@site/docs/features/api-versioning.md",slug:"/features/api-versioning",permalink:"/docs/docs/features/api-versioning",editUrl:"https://github.com/moslem-deris/docs/edit/main/docs/features/api-versioning.md",version:"current",lastUpdatedBy:"Moslem Deris",lastUpdatedAt:1617580354,formattedLastUpdatedAt:"4/4/2021",sidebar:"docs",previous:{title:"System Settings",permalink:"/docs/docs/features/system-settings"},next:{title:"Validation",permalink:"/docs/docs/features/validation"}},p=[{value:"How it works",id:"how-it-works",children:[]},{value:"Version the API in header instead of URL",id:"version-the-api-in-header-instead-of-url",children:[]}],c={toc:p};function s(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",{parentName:"li",href:"#how-it-works"},"How it works")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",{parentName:"li",href:"#version-the-api-in-header-instead-of-url"},"Versioning API in header instead of URL"))),Object(a.b)("p",null,"Since Laravel does not support API versioning, ",Object(a.b)("strong",{parentName:"p"},"apiato")," provide a very easy way to implement versioning for your API."),Object(a.b)("h3",{id:"how-it-works"},"How it works"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Create:")),Object(a.b)("p",null,"When creating a new API endpoint, specify the version number in the route file name following this naming format ",Object(a.b)("inlineCode",{parentName:"p"},"{endpoint-name}.{version-number}.{documentation-name}.php"),"."),Object(a.b)("p",null,"Example:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"MakeOrder.v1.public.php")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"MakeOrder.v2.public.php")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"ListOrders.v1.private.php"))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Use:")),Object(a.b)("p",null,"Automatically the endpoint inside that route file will be accessible by adding the version number to the URL."),Object(a.b)("p",null,"Example:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"http://api.apiato.test/v1/register")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"http://api.apiato.test/v1/orders")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"http://api.apiato.test/v2/stores/123"))),Object(a.b)("h2",{id:"version-the-api-in-header-instead-of-url"},"Version the API in header instead of URL"),Object(a.b)("p",null,"First remove the URL version prefix:"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"Edit ",Object(a.b)("inlineCode",{parentName:"li"},"app/Ship/Configs/apiato.php"),", set prefix to ",Object(a.b)("inlineCode",{parentName:"li"},"'enable_version_prefix' => 'false',"),"."),Object(a.b)("li",{parentName:"ol"},"Implement the Header versioning anyway you prefer. (this is not implemented in Apiato yet. ",Object(a.b)("em",{parentName:"li"},"Consider a contribution"),").")))}s.isMDXComponent=!0},173:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var r=n(0),i=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=i.a.createContext({}),s=function(e){var t=i.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},b=function(e){var t=s(e.components);return i.a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},d=i.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),b=s(n),d=r,m=b["".concat(o,".").concat(d)]||b[d]||u[d]||a;return n?i.a.createElement(m,l(l({ref:t},c),{},{components:n})):i.a.createElement(m,l({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var c=2;c<a;c++)o[c]=n[c];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);