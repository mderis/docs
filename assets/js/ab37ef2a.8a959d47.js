(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{133:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return l})),r.d(t,"metadata",(function(){return o})),r.d(t,"toc",(function(){return s})),r.d(t,"default",(function(){return p}));var a=r(3),n=r(7),i=(r(0),r(168)),l={title:"Conventions and Principles"},o={unversionedId:"getting-started/conventions-and-principles",id:"getting-started/conventions-and-principles",isDocsHomePage:!1,title:"Conventions and Principles",description:"* HTTP Methods usage in RESTful API's",source:"@site/docs/getting-started/conventions-and-principles.md",slug:"/getting-started/conventions-and-principles",permalink:"/docs/docs/getting-started/conventions-and-principles",editUrl:"https://github.com/moslem-deris/docs/edit/main/docs/getting-started/conventions-and-principles.md",version:"current",lastUpdatedBy:"Moslem Deris",lastUpdatedAt:1617580354,formattedLastUpdatedAt:"4/4/2021",sidebar:"docs",previous:{title:"Software Architectural Patterns",permalink:"/docs/docs/getting-started/software-architectural-patterns"},next:{title:"Code Generator",permalink:"/docs/docs/features/code-generator"}},s=[{value:"HTTP Methods usage in RESTful API&#39;s",id:"http-methods-usage-in-restful-apis",children:[]},{value:"Naming Conventions for Routes &amp; Actions",id:"naming-conventions-for-routes-and-actions",children:[]},{value:"General guidelines and principles for RESTful URLs",id:"general-guidelines-and-principles-for-restful-urls",children:[]},{value:"Good URL examples",id:"good-url-examples",children:[]},{value:"General principles for HTTP methods",id:"general-principles-for-http-methods",children:[]}],c={toc:s};function p(e){var t=e.components,r=Object(n.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},c,r,{components:t,mdxType:"MDXLayout"}),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"#http-methods-usage-in-restful-apis"},"HTTP Methods usage in RESTful API's")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"#naming-conventions-for-routes-and-actions"},"Naming Conventions for Routes & Actions")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"#general-guidelines-and-principles-for-restful-urls"},"General guidelines and principles for RESTful URLs")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"#good-url-examples"},"Good URL examples")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"#general-principles-for-http-methods"},"General principles for HTTP methods"))),Object(i.b)("h3",{id:"http-methods-usage-in-restful-apis"},"HTTP Methods usage in RESTful API's"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"GET (SELECT): retrieve a specific resource from the server, or a listing of resources."),Object(i.b)("li",{parentName:"ul"},"POST (CREATE): create a new resource on the server."),Object(i.b)("li",{parentName:"ul"},"PUT (UPDATE): update a resource on the server, providing the entire resource."),Object(i.b)("li",{parentName:"ul"},"PATCH (UPDATE): update a resource on the server, providing only changed attributes."),Object(i.b)("li",{parentName:"ul"},"DELETE (DELETE): remove a resource from the server.")),Object(i.b)("h3",{id:"naming-conventions-for-routes-and-actions"},"Naming Conventions for Routes & Actions"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"GetAllResource"),": to fetch all resources. You can apply ",Object(i.b)("inlineCode",{parentName:"li"},"?search")," query parameter to filter data."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"FindResourceByID"),": to search for single resource by its unique identifier."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"CreateResource"),": to create a new resource."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"UpdateResource"),": to update/edit existing resource."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"DeleteResource"),": to delete a resource.")),Object(i.b)("h3",{id:"general-guidelines-and-principles-for-restful-urls"},"General guidelines and principles for RESTful URLs"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A URL identifies a resource."),Object(i.b)("li",{parentName:"ul"},"URLs should include nouns, not verbs."),Object(i.b)("li",{parentName:"ul"},"Use plural nouns only for consistency (no singular nouns)."),Object(i.b)("li",{parentName:"ul"},"Use HTTP verbs (GET, POST, PUT, DELETE) to operate on the collections and elements."),Object(i.b)("li",{parentName:"ul"},"You should not need to go deeper than resource/identifier/resource."),Object(i.b)("li",{parentName:"ul"},"Put the version number at the base of your URL, for example ",Object(i.b)("inlineCode",{parentName:"li"},"http://apiato.test/v1/path/to/resource"),"."),Object(i.b)("li",{parentName:"ul"},'If an input data changes the logic of the endpoint, it should be passed in the URL. If not can go in the header "like Auth Token".'),Object(i.b)("li",{parentName:"ul"},"Don't use query parameters to alter state."),Object(i.b)("li",{parentName:"ul"},"Don't use mixed-case paths if you can help it; lowercase is best."),Object(i.b)("li",{parentName:"ul"},"Don't use implementation-specific extensions in your URIs (.php, .py, .pl, etc.)"),Object(i.b)("li",{parentName:"ul"},"Limit your URI space as much as possible. And keep path segments short."),Object(i.b)("li",{parentName:"ul"},"Don't put metadata in the body of a response that should be in a header")),Object(i.b)("h3",{id:"good-url-examples"},"Good URL examples"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Find a single Car by its unique identifier (ID):",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"GET http://www.api.apiato.test/v1/cars/123")))),Object(i.b)("li",{parentName:"ul"},"Get all Cars:",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"GET http://www.api.apiato.test/v1/cars")))),Object(i.b)("li",{parentName:"ul"},"Find/Search cars by one or more fields:",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"GET http://www.api.apiato.test/v1/cars?search=maker:mercedes")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"GET http://www.api.apiato.test/v1/cars?search=maker:mercedes;color:white")))),Object(i.b)("li",{parentName:"ul"},"Order and Sort query result:",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"GET http://www.api.apiato.test/v1/cars?orderBy=created_at&sortedBy=desc")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"GET http://www.api.apiato.test/v1/cars?search=maker:mercedes&orderBy=created_at&sortedBy=desc")))),Object(i.b)("li",{parentName:"ul"},"Specify optional fields:",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"GET http://www.api.apiato.test/v1/cars?filter=id;name;status")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"GET http://www.api.apiato.test/v1/cars/123?filter=id;name;status")))),Object(i.b)("li",{parentName:"ul"},"Get all Drivers belonging to a Car:",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"GET http://www.api.apiato.test/v1/cars/123/drivers")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"GET http://www.api.apiato.test/v1/cars/123/drivers/123/addresses")))),Object(i.b)("li",{parentName:"ul"},"Include Drivers objects relationship with the car response:",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"GET http://www.api.apiato.test/v1/cars/123?include=drivers")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"GET http://www.api.apiato.test/v1/cars/123?include=drivers,owner")))),Object(i.b)("li",{parentName:"ul"},"Add new Car:",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"POST http://www.api.apiato.test/v1/cars")))),Object(i.b)("li",{parentName:"ul"},"Add new Driver to a Car:",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"POST http://www.api.apiato.test/v1/cars/123/drivers"))))),Object(i.b)("h3",{id:"general-principles-for-http-methods"},"General principles for HTTP methods"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Don't ever use GET to alter state; to prevent Googlebot from corrupting your data. And use GET as much as possible."),Object(i.b)("li",{parentName:"ul"},"Don't use PUT unless you are updating an entire resource. And unless you can also legitimately do a GET on the same URI."),Object(i.b)("li",{parentName:"ul"},"Don't use POST to retrieve information that is long-lived or that might be reasonable to cache."),Object(i.b)("li",{parentName:"ul"},"Don't perform an operation that is not idempotent with PUT."),Object(i.b)("li",{parentName:"ul"},"Use GET for things like calculations, unless your input is large, in which case use POST."),Object(i.b)("li",{parentName:"ul"},"Use POST in preference to PUT when in doubt."),Object(i.b)("li",{parentName:"ul"},"Use POST whenever you have to do something that feels RPC-like."),Object(i.b)("li",{parentName:"ul"},"Use PUT for classes of resources that are larger or hierarchical."),Object(i.b)("li",{parentName:"ul"},"Use DELETE in preference to POST to remove resources.")))}p.isMDXComponent=!0},168:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return m}));var a=r(0),n=r.n(a);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=n.a.createContext({}),p=function(e){var t=n.a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=p(e.components);return n.a.createElement(c.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},d=n.a.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(r),d=a,m=u["".concat(l,".").concat(d)]||u[d]||b[d]||i;return r?n.a.createElement(m,o(o({ref:t},c),{},{components:r})):n.a.createElement(m,o({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var c=2;c<i;c++)l[c]=r[c];return n.a.createElement.apply(null,l)}return n.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);